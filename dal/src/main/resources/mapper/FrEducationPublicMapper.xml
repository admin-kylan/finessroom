<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yj.dal.dao.FrEducationPublicMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yj.dal.model.FrEducation">
        <id column="id" property="id" />
        <result column="execute_date_plan" property="executeDatePlan" />
        <result column="begin_date_plan" property="beginDatePlan" />
        <result column="end_date_plan" property="endDatePlan" />
        <result column="shop_id" property="shopId" />
        <result column="shop_name" property="shopName" />
        <result column="course_id" property="courseId" />
        <result column="course_name" property="courseName" />
        <result column="type" property="type" />
        <result column="coach_id" property="coachId" />
        <result column="coach_name" property="coachName" />
        <result column="room_id" property="roomId" />
        <result column="room_name" property="roomName" />
        <result column="reserve_total_num" property="reserveTotalNum" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="status" property="status" />
        <result column="assistant_name" property="assistantName" />
        <result column="assistant_id" property="assistantId" />
        <result column="is_use" property="isUse" />
        <result column="sdaduim_id" property="sdaduimId" />
        <result column="sdaduim_name" property="sdaduimName" />
        <result column="create_user_id" property="createUserId" />
        <result column="CustomerCode" property="CustomerCode" />
        <result column="create_user_name" property="createUserName" />
        <result column="update_user_id" property="updateUserId" />
        <result column="update_user_name" property="updateUserName" />
        <result column="reserve_type" property="reserveType" />
        <result column="class_sales_num" property="classSalesNum" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, execute_date_plan AS executeDatePlan, begin_date_plan AS beginDatePlan, end_date_plan AS endDatePlan, shop_id AS shopId, shop_name AS shopName, course_id AS courseId, course_name AS courseName, type, coach_id AS coachId, coach_name AS coachName, room_id AS roomId, room_name AS roomName, reserve_total_num AS reserveTotalNum, create_time AS createTime, update_time AS updateTime, status, assistant_name AS assistantName, assistant_id AS assistantId, is_use AS isUse, sdaduim_id AS sdaduimId, sdaduim_name AS sdaduimName, create_user_id AS createUserId, CustomerCode, create_user_name AS createUserName, update_user_id AS updateUserId, update_user_name AS updateUserName, reserve_type as reserveType
        ,class_sales_num as classSalesNum
    </sql>
    <sql id="Base_Column_List_alias">
        edu.id id, edu.execute_date_plan AS executeDatePlan, edu.begin_date_plan AS beginDatePlan, edu.end_date_plan AS endDatePlan,
         edu.shop_id AS shopId, edu.shop_name AS shopName, edu.course_id AS courseId, edu.course_name AS courseName, edu.type,
         edu.coach_id AS coachId, edu.coach_name AS coachName, edu.room_id AS roomId, edu.room_name AS roomName,
          edu.reserve_total_num AS reserveTotalNum, edu.create_time AS createTime, edu.update_time AS updateTime, edu.status,
           edu.assistant_name AS assistantName, edu.assistant_id AS assistantId, edu.is_use AS isUse, edu.sdaduim_id AS sdaduimId,
           edu.sdaduim_name AS sdaduimName, edu.create_user_id AS createUserId, edu.CustomerCode, edu.create_user_name AS createUserName,
           edu.update_user_id AS updateUserId, edu.update_user_name AS updateUserName, edu.reserve_type as reserveType,
           edu.class_sales_num as classSalesNum
    </sql>


    <select id="findCoachList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            pi.ID coachId,
            pi.RelName coachName,
            pi.Mobile coachMobile,
            pi.Sex coachSex,
            pi.JobNumber coachJobNumber

        FROM
            PersonnelInfo pi
            LEFT JOIN PersonlRole pr ON pi.id = pr.PersonnelInfoId
            LEFT JOIN RoleInfo ri ON pr.RoleInfoId = ri.Id

        WHERE
            ri.UserType = 3
            AND ri.ISTeach = 1
            AND pi.CustomerCode = #{CustomerCode}
            AND pi.ShopId= #{shopId}
            AND pi.IsDel = 0

    </select>

    <select id="findSdaduimList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            numId,
            name,
            id
        FROM
            Sdaduim
        WHERE
            shopId = #{shopId}
            AND Status = 0
            AND CustomerCode = #{CustomerCode}
    </select>

    <!-- 获取团教 -->
    <select id="findEducationList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            <include refid="Base_Column_List_alias"></include>,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 1 and eci.is_use = 1) eduCurrentCount,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 0 and eci.is_use = 1) eduCancelCount,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 2 and eci.is_use = 1) eduToConfirmCount,
            ec.reserve_time configReserveTime,
            ec.setting_time configSettingTime,
            ec.is_start_class configStartClass,
            ec.is_choose_coach configChooseCoach,
            ec.is_reserve_confirm configReserveConfirm,
            ec.admission_time configAdmissionTime,
            ec.is_online_reserve configOnlineReserve,
            ec.is_card_settle configCardSettle,
            ec.is_course_settle configCourseSettle,
            gc.image_url courseImage,
            gc.member_price courseMemberPrice,
            ec.id configId
        FROM
            fr_education edu
            left join fr_education_config ec on edu.id = ec.education_id
            left join fr_group_course gc on gc.id = edu.course_id
        WHERE
            edu.shop_id = #{shopId}
        <if test="coachId != null and coachId != ''">
            AND edu.coach_id = #{coachId}
        </if>
            AND edu.CustomerCode = #{CustomerCode}
        <if test="sdaduimId != null and sdaduimId != ''">
            AND edu.sdaduim_id = #{sdaduimId}
        </if>
        <if test="beginDate != null and beginDate != ''">
            AND edu.execute_date_plan >= #{beginDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND edu.execute_date_plan <![CDATA[ <= ]]> #{endDate}
        </if>
            AND edu.type = ${eduType}
        ORDER BY
            edu.execute_date_plan ASC
    </select>

    <!-- 获取私教一对多 -->
    <select id="findEducationOneToManyList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            <include refid="Base_Column_List_alias"></include>,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 1 and eci.is_use = 1) eduCurrentCount,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 0 and eci.is_use = 1) eduCancelCount,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 2 and eci.is_use = 1) eduToConfirmCount,
            ec.reserve_time configReserveTime,
            ec.setting_time configSettingTime,
            ec.is_start_class configStartClass,
            ec.is_choose_coach configChooseCoach,
            ec.is_reserve_confirm configReserveConfirm,
            ec.admission_time configAdmissionTime,
            ec.is_online_reserve configOnlineReserve,
            gc.private_image courseImage,
            gc.member_price courseMemberPrice,
            ec.id configId
        FROM
            fr_education edu
        left join
            fr_education_config ec on edu.id = ec.education_id
        left join
            fr_private_cource pc on pc.id = edu.course_id
        WHERE
            edu.shop_id = #{shopId}
        <if test="coachId != null and coachId != ''">
            AND edu.coach_id = #{coachId}
        </if>
            AND edu.CustomerCode = #{CustomerCode}
        <if test="sdaduimId != null and sdaduimId != ''">
            AND edu.sdaduim_id = #{sdaduimId}
        </if>
        <if test="beginDate != null and beginDate != ''">
            AND edu.execute_date_plan >= #{beginDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND edu.execute_date_plan <![CDATA[ <= ]]> #{endDate}
        </if>
            AND edu.type = ${eduType}
            and edu.reserve_type = 2
        ORDER BY
            edu.execute_date_plan ASC
    </select>

    <!-- 获取私教一对一 -->
    <select id="findEducationOneToOneList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            <include refid="Base_Column_List_alias"></include>,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 1 and eci.is_use = 1) eduCurrentCount,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 0 and eci.is_use = 1) eduCancelCount,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 2 and eci.is_use = 1) eduToConfirmCount,
            eci.member_id infoMemberId,
            eci.member_name infoMemberName,
            eci.mobile infoMobile,
            eci.reserve_client_name infoReserveClientName,
            eci.reserve_client_id infoReserveClientId,
            eci.reserve_date infoReserveDate,
            eci.settle_type infoSettleType,
            eci.deduction_balance infoDeductionBalance,
            eci.reserve_status infoReserveStatus,
            eci.remarks infoRemarks,
            gc.private_image courseImage,
            gc.member_price courseMemberPrice
        FROM
            fr_education edu
        left join
            fr_education_client_info eci on edu.id = eci.education_id
        left join
            fr_private_cource pc on pc.id = edu.course_id
        WHERE
            edu.shop_id = #{shopId}
        <if test="coachId != null and coachId != ''">
            AND edu.coach_id = #{coachId}
        </if>
            AND edu.CustomerCode = #{CustomerCode}
        <if test="sdaduimId != null and sdaduimId != ''">
            AND edu.sdaduim_id = #{sdaduimId}
        </if>
        <if test="beginDate != null and beginDate != ''">
            AND edu.execute_date_plan >= #{beginDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND edu.execute_date_plan <![CDATA[ <= ]]> #{endDate}
        </if>
            AND edu.type = ${eduType}
            and edu.reserve_type = 1
        ORDER BY
            edu.execute_date_plan ASC
    </select>

    <select id="findEducationById" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            <include refid="Base_Column_List"></include>,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 1 and eci.is_use = 1) eduCurrentCount,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 0 and eci.is_use = 1) eduCancelCount,
            (select count(1) from fr_education_client_info eci where eci.education_id = edu.id and eci.reserve_status = 2 and eci.is_use = 1) eduToConfirmCount
        FROM
            fr_education edu
        WHERE
            edu.id = #{eduId}
    </select>

   <select id="getGroupRoomSeatById" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            gcr.id roomId,
            gcrs.id roomSeatId,
            gcr.name roomName,
            gcrs.seat_num seatNum,
            gcrs.cnt_col colNum,
            gcrs.cnt_row rowNum
        FROM
            fr_group_class_room gcr
            LEFT JOIN fr_group_class_room_seat gcrs ON gcr.id = gcrs.class_room_id
        WHERE
            gcr.id = #{roomId}
    </select>


    <select id="getClientByMobileName" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            c.id,
            c.client_name clientName,
            c.mobile,
            ( CASE WHEN c.sex = 1 THEN '女' ELSE '男' END ) sex,
            (
            CASE

                    WHEN ( SELECT id FROM fr_client_personal cp WHERE cp.client_id = c.id ) IS NULL THEN
                    ( CASE WHEN ( SELECT id FROM fr_client_latence_personal clp WHERE clp.client_id = c.id ) IS NULL THEN NULL ELSE '潜在客户' END ) ELSE '现有客户'
                END
                ) memberType
            FROM
                fr_client c
        WHERE
            c.is_using = 1
            and c.CustomerCode = #{CustomerCode}
             AND ( mobile LIKE '%'+#{mobile}+'%' OR client_name LIKE '%'+#{mobile}+'%' )
    </select>

    <!-- 查找是否现有客户还是潜在客户 -->
    <select id="getClientMemberType" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            (
            CASE

                    WHEN ( SELECT id FROM fr_client_personal cp WHERE cp.client_id = c.id ) IS NULL THEN
                    ( CASE WHEN ( SELECT id FROM fr_client_latence_personal clp WHERE clp.client_id = c.id ) IS NULL THEN NULL ELSE '潜在客户' END ) ELSE '现有客户'
                END
                ) memberType
            FROM
                fr_client c
        WHERE
            c.is_using = 1
            and c.id = #{clientId}
    </select>


    <!-- 根据卡号，手机号，票券，团购号查询卡号 600003081-->
    <select id="findMemberCardByInput" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            c.id clientId,
            c.client_name clientName,
            ( CASE WHEN c.sex = 1 THEN '女' ELSE '男' END ) sex,
            card.card_no cardNo,
            (
            SELECT
                a.card_type_name
            FROM
                fr_card_type a
            WHERE
                a.is_using = 1
                AND a.CustomerCode = #{CustomerCode}
            AND a.id = ( SELECT b.card_type_id FROM fr_card b WHERE b.id = card.id )) cardTypeName,
            card.bind_time bindDate,
            card.invalid_time invalidDate,
            card.have_rights_num haveRightsNum,
            (
            SELECT
                pi.RelName
            FROM
                PersonnelInfo pi
                LEFT JOIN fr_card_order_info coi ON coi.personnel_id = pi.ID
            WHERE
                coi.card_id = card.id
                AND coi.client_id = c.id
            ) salesName,
            (
            SELECT TOP
                1 order_amt
            FROM
                fr_card_order_datail
            WHERE
                card_id = card.id
                AND client_id = c.id
                AND type = 1
                AND is_using = 1
            ORDER BY
                create_time DESC
            ) totalAmt,
            c.consultant_name consultantName,
        /* 服务顾问*/
            card.status status,
            (
            SELECT
                (
                CASE

                        WHEN a.type = 1 THEN
                        '时间卡'
                        WHEN a.type = 2 THEN
                        '小时卡'
                        WHEN a.type = 3 THEN
                        '次卡'
                        WHEN a.type = 4 THEN
                        '储值卡'
                        WHEN a.type = 5 THEN
                        '充值卡'
                        WHEN a.type = 6 THEN
                        '折扣卡'
                        WHEN a.type = 7 THEN
                        '员工卡'
                    END
                    )
                FROM
                    fr_card_type a
                WHERE
                    a.is_using = 1
                    AND a.CustomerCode = #{CustomerCode}
                AND a.id = ( SELECT b.card_type_id FROM fr_card b WHERE b.id = card.id )) cardType,
            ( SELECT pic_link FROM fr_client_pic WHERE client_id = c.id AND pic_type = 1 ) clientPic,
            ( SELECT
                (
                CASE WHEN ( SELECT id FROM fr_client_personal cp WHERE cp.client_id = cli.id ) IS NULL THEN
                ( CASE WHEN ( SELECT id FROM fr_client_latence_personal clp WHERE clp.client_id = cli.id ) IS NULL THEN NULL ELSE '潜在客户' END ) ELSE '现有客户'
                END
                ) memberType
                FROM
                fr_client cli
                WHERE
                cli.is_using = 1
                and cli.id = c.id
            ) memberType,
            c.mobile,
            card.id cardId,
            card.card_type_id cardTypeId
            FROM
                fr_client c
                LEFT JOIN fr_card card ON card.client_id = c.id
               /* LEFT JOIN fr_card_type ct ON ct.id = card.card_type_id*/
            WHERE


            <if test='isSearchMobile == "1"'>
                c.mobile = #{searchInput}
            </if>
            <if test='isSearchMobile == "0"'>
                card.card_no = #{searchInput}
            </if>

                AND c.is_using = 1
            AND c.CustomerCode = #{CustomerCode}
            AND card.is_using = 1
            and card.shop_id = #{shopId}
            and card.status = 0
        order by card.invalid_time asc
    </select>

    <!-- 根据卡号，手机号，票券，团购号查询卡号 只能已预约过的可以预约 89e6193e782c68b8-->
    <select id="findMemberCardReserveByInput" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            eci.member_id clientId,
            eci.member_name clientName,
            eci.sex,
            card.card_no cardNo,
            (
            SELECT
                a.card_type_name
            FROM
                fr_card_type a
            WHERE
                a.is_using = 1
                AND a.CustomerCode = #{CustomerCode}
            AND a.id = ( SELECT b.card_type_id FROM fr_card b WHERE b.id = card.id )) cardTypeName,
            card.bind_time bindDate,
            card.invalid_time invalidDate,
            card.have_rights_num haveRightsNum,
            (
            SELECT
                pi.RelName
            FROM
                PersonnelInfo pi
                LEFT JOIN fr_card_order_info coi ON coi.personnel_id = pi.ID
            WHERE
                coi.card_id = card.id
                AND coi.client_id = eci.member_id
            ) salesName,
            (
            SELECT TOP
                1 order_amt
            FROM
                fr_card_order_datail
            WHERE
                card_id = card.id
                AND client_id = eci.member_id
                AND type = 1
                AND is_using = 1
            ORDER BY
                create_time DESC
            ) totalAmt,
            cl.consultant_name consultantName,
        /* 服务顾问*/
            card.status status,
            (
            SELECT
                (
                CASE

                        WHEN a.type = 1 THEN
                        '时间卡'
                        WHEN a.type = 2 THEN
                        '小时卡'
                        WHEN a.type = 3 THEN
                        '次卡'
                        WHEN a.type = 4 THEN
                        '储值卡'
                        WHEN a.type = 5 THEN
                        '充值卡'
                        WHEN a.type = 6 THEN
                        '折扣卡'
                        WHEN a.type = 7 THEN
                        '员工卡'
                    END
                    )
                FROM
                    fr_card_type a
                WHERE
                    a.is_using = 1
                    AND a.CustomerCode = #{CustomerCode}
                AND a.id = ( SELECT b.card_type_id FROM fr_card b WHERE b.id = card.id )) cardType,
                ( SELECT pic_link FROM fr_client_pic WHERE client_id = eci.member_id AND pic_type = 1 ) clientPic,
                ( SELECT(
                    CASE WHEN ( SELECT id FROM fr_client_personal cp WHERE cp.client_id = cli.id ) IS NULL THEN
                    ( CASE WHEN ( SELECT id FROM fr_client_latence_personal clp WHERE clp.client_id = cli.id ) IS NULL THEN NULL ELSE '潜在客户' END ) ELSE '现有客户'
                    END
                    ) memberType
                    FROM
                    fr_client cli
                    WHERE
                    cli.is_using = 1
                    and cli.id = cl.id
                ) memberType,
            cl.mobile,
            card.id cardId,
            card.card_type_id cardTypeId
            FROM
                fr_education_client_info eci
                LEFT JOIN fr_card card ON card.client_id = eci.member_id
                LEFT JOIN fr_client cl ON cl.id = eci.member_id
                LEFT JOIN fr_education ed ON eci.education_id = ed.id
            WHERE

                <if test='isSearchMobile == "1"'>
                    eci.mobile = #{searchInput}
                </if>
                <if test='isSearchMobile == "0"'>
                    card.card_no = #{searchInput}
                </if>

                AND eci.is_use = 1
                AND eci.reserve_status = 1
                AND ed.CustomerCode = #{CustomerCode}
            AND card.is_using = 1
            AND ed.shop_id = #{shopId}
            and card.status = 0
        order by card.invalid_time asc
    </select>

    <!-- 查询训练计划 -->
    <select id="findCourseTrainingPlan" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            a.image,
            ase.name seriesName,
            a.name actionName,
            a.diff actionDiff,
            tc.strength traningStrength,
            tc.time traningTime,
            tc.count traningCount,
            tc.remark traningremark
        FROM
            fr_action a
            LEFT JOIN fr_traning_class tc ON a.id = tc.action_id
            LEFT JOIN fr_group_cource_relation gcr ON gcr.training_series_id = tc.traning_series_id
            LEFT JOIN fr_group_course gc ON gc.id = gcr.private_cource_id
            LEFT JOIN fr_action_series ase ON a.series_id = ase.id
        WHERE
            gc.id = #{courseId}

    </select>

    <!-- 查询训练计划 -->
    <select id="findCardOrderDetailFirst" parameterType="java.lang.String" resultType="java.util.Map">
     SELECT TOP
            1 order_amt orderAmt,
            client_id clientId
        FROM
            fr_card_order_datail
        WHERE
            card_id = #{cardId}
            AND type = 1
            AND is_using = 1
        ORDER BY
            create_time DESC
    </select>


    <!-- 教练查询 -->
    <select id="findEducationCoachList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            *
        FROM
            (
            SELECT
                pi.ID persionCoachId,
                pi.RelName persionCoachName,
                pi.Mobile persionCoachMobile,
                ( CASE WHEN pi.Sex = 1 THEN '女' ELSE '男' END ) persionCoachSex,
                pi.JobNumber persionCoachJobNumber,
                pi.EntryTime persionCoachEntryTime
        FROM
            PersonnelInfo pi
            LEFT JOIN PersonlRole pr ON pi.id = pr.PersonnelInfoId
            LEFT JOIN RoleInfo ri ON pr.RoleInfoId = ri.Id
        WHERE
            ri.UserType = 3
            AND ri.ISTeach = 1
            AND pi.ShopId= #{shopId}
            AND pi.CustomerCode = #{CustomerCode}
            AND pi.IsDel = 0
            ) coach
            LEFT JOIN (
            SELECT
                <include refid="Base_Column_List_alias"></include>,
                ( SELECT COUNT ( 1 ) FROM fr_education_client_info eci WHERE eci.education_id = edu.id AND eci.reserve_status = 1 AND eci.is_use = 1 ) eduCurrentCount,
                ( SELECT COUNT ( 1 ) FROM fr_education_client_info eci WHERE eci.education_id = edu.id AND eci.reserve_status = 0 AND eci.is_use = 1 ) eduCancelCount,
                ( SELECT COUNT ( 1 ) FROM fr_education_client_info eci WHERE eci.education_id = edu.id AND eci.reserve_status = 2 AND eci.is_use = 1 ) eduToConfirmCount,
                ec.reserve_time configReserveTime,
                ec.setting_time configSettingTime,
                ec.is_start_class configStartClass,
                ec.is_choose_coach configChooseCoach,
                ec.is_reserve_confirm configReserveConfirm,
                ec.admission_time configAdmissionTime,
                ec.is_online_reserve configOnlineReserve,
                ec.is_card_settle configCardSettle,
                ec.is_course_settle configCourseSettle,
                gc.image_url courseImage,
                gc.member_price courseMemberPrice,
                ec.id configId
            FROM
                fr_education edu
                LEFT JOIN fr_education_config ec ON edu.id = ec.education_id
                LEFT JOIN fr_group_course gc ON gc.id = edu.course_id
            WHERE
                edu.execute_date_plan = #{executeDate}
               /* AND edu.status = 0*/
                AND edu.is_use = 1
                AND edu.CustomerCode = #{CustomerCode}
                AND edu.shop_id = #{shopId}
                AND edu.type = ${teachType}
                <if test="sdaduimId != null and sdaduimId != ''">
                    AND edu.sdaduim_id = #{sdaduimId}
                </if>
            ) edu ON edu.coachId = coach.persionCoachId
        ORDER BY
            coach.persionCoachEntryTime ASC
	</select>


    <!-- 房间查询 -->
    <select id="findEducationRoomList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            *
        FROM
            (
            SELECT
                gcr.id roomId,
                gcrs.id roomSeatId,
                gcr.name roomName,
                gcrs.seat_num seatNum,
                gcrs.cnt_col colNum,
                gcrs.cnt_row rowNum,
                shop.id shopId,
                shop.shopName shopName,
                sdaduim.id sdaduimId,
                sdaduim.name sdaduimName
            FROM
                fr_group_class_room_seat gcrs
                LEFT JOIN fr_group_class_room gcr ON gcrs.class_room_id = gcr.id
                left join Shop shop on shop.id = gcr.shop_id
                left join Sdaduim sdaduim on sdaduim.id = gcr.sdaduim_id
            WHERE
                gcr.shop_id = #{shopId}
                AND gcr.customer_code = #{CustomerCode}
                AND gcr.is_using = 1
                AND gcrs.is_using = 1
            ) room
            LEFT JOIN (
            SELECT
                pi.ID coachId,
                pi.RelName coachName,
                pi.Mobile coachMobile,
                ( CASE WHEN pi.Sex = 1 THEN '女' ELSE '男' END ) coachSex,
                pi.JobNumber coachJobNumber,
                edu.id eduId,
                edu.begin_date_plan eduBeginDate,
                edu.end_date_plan eduEndDate,
                edu.course_id courseId,
                edu.course_name courseName,
                edu.room_id eduRoomId,
                edu.reserve_total_num reserveTotalNum,
                edu.assistant_name assistantName,
                edu.assistant_id assistantId
            FROM
                fr_education edu
                LEFT JOIN PersonnelInfo pi ON edu.coach_id = pi.id
            WHERE
                edu.shop_id = #{shopId}
            <if test="sdaduimId != null and sdaduimId != ''">
                AND edu.sdaduim_id = #{sdaduimId}
            </if>
                AND edu.CustomerCode = #{CustomerCode}
                AND edu.execute_date_plan = #{executeDate}
                AND edu.type = 0
               /* AND edu.status = 0*/
                AND edu.is_use = 1
            ) edu ON edu.eduRoomId = room.roomId
    </select>

    <select id="findCoursePublicList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            gssr.shop_id shopId,
            shop.ShopName shopName,
            gc.id courseId,
            gc.name courseName,
            gc.can_reserve_num reserveTotalNum,
            gc.class_count classSalesNum,
            gc.time courseTime
        FROM
            fr_group_course gc
            LEFT JOIN fr_group_series gs ON gc.series_id = gs.id
            LEFT JOIN fr_group_series_shop_relation gssr ON gssr.series_id = gc.series_id
            LEFT JOIN Shop shop ON gssr.shop_id = shop.ID
        WHERE
            gssr.shop_id = #{shopId}
            AND gc.customer_code = #{CustomerCode}
            AND gc.class_status = 1
            AND gc.is_using = 1
    </select>

    <select id="findShopSdaduimCourseList" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            gssr.shop_id shopId,
            shop.ShopName shopName,
            gc.id courseId,
            gc.name courseName,
            gc.can_reserve_num reserveTotalNum,
            gc.class_count classSalesNum
        FROM
            fr_group_course gc
            LEFT JOIN fr_group_series gs ON gc.series_id = gs.id
            LEFT JOIN fr_group_series_shop_relation gssr ON gssr.series_id = gc.series_id
            LEFT JOIN Shop shop ON gssr.shop_id = shop.ID
        WHERE
            gssr.shop_id = #{shopId}
            AND gc.customer_code = #{CustomerCode}
            AND gc.class_status = 1
            AND gc.is_using = 1
    </select>

    <select id="searchSettlement" parameterType="java.lang.String" resultType="java.util.Map">
         SELECT
            edu.coach_name coachName,
            edu.course_name courseName,
            emo.member_card_no memberCardNo,
            eci.member_name memberName,
            eci.mobile memberMobile,
            emo.create_date createDate,
            emo.begin_date_real beginDate,
            emo.end_date_real endDate,
            emo.create_name createName,
            emo.status status,
            emo.id id,
            emo.client_info_id clientInfoId,
            edu.id eduId,
            edu.class_sales_num classSalesNum,
            edu.shop_id shopId
        FROM
            fr_education_member_order emo
            LEFT JOIN fr_education_client_info eci ON eci.id = emo.client_info_id
            LEFT JOIN fr_education edu ON edu.id = eci.education_id
        where
            edu.shop_id = #{shopId}
        <if test="beginDate != null and beginDate != ''">
            and emo.create_date <![CDATA[ >= ]]> #{beginDate}
        </if>
        <if test="endDate != null and endDate != ''">
            and emo.create_date <![CDATA[ <= ]]> #{endDate}
        </if>
        <if test="searchInput != null and searchInput != ''">
            AND ( emo.member_card_no LIKE '%'+#{searchInput}+'%' OR eci.mobile LIKE '%'+#{searchInput}+'%' )
        </if>
            and edu.CustomerCode = #{code}
            and emo.status in (0,2)
            and edu.type = ${eduType}
    </select>

    <select id="findConsumeConditionCardType" parameterType="java.lang.String" resultType="java.util.Map">
         select DISTINCT card_type cardType from fr_education_member_order
    </select>
    <select id="findConsumeConditionCardName" parameterType="java.lang.String" resultType="java.util.Map">
         select DISTINCT card_name cardName from fr_education_member_order
    </select>

    <!-- 查找哪些课程是到时间 -->
    <select id="findEduIdForEndClass" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            edu.id eduId
        FROM
            fr_education edu
            LEFT JOIN fr_education_class_order eco ON edu.id = eco.education_id
        WHERE
            edu.status = 1
            and edu.is_use = 1
            AND (
        SELECT
            DATEDIFF(
            MINUTE,
            eco.end_date_real,
            GETDATE())) >= eco.total_time
    </select>

    <update id="updateEduStatusToEndClass" parameterType="java.lang.String">
    UPDATE fr_education
        SET status = 2
    WHERE
        id = #{eduId}
    </update>

    <select id="findConsumeClass" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            eco.begin_date_real beginDate,
            eco.end_date_real endDate,
            edu.course_name courseName,
            eco.total_time totalTime,
            eco.total_gain totalGain,
            eco.total_num totalNum,
            eco.finish_num finishNum,
            eco.undone_num undoneNum,
            edu.coach_name coachName,
            edu.room_name roomName,
            eco.create_user createUser,
            eco.score,
            edu.execute_date_plan executeDatePlan,
            edu.begin_date_plan beginDatePlan,
            edu.end_date_plan endDatePlan,
            eco.member_assess memberAssess,
            eco.coach_summary coachSummary,
            eco.program_better programBetter
        FROM
            fr_education_class_order eco
            LEFT JOIN fr_education edu ON edu.id = eco.education_id
        WHERE
            edu.shop_id = #{shopId}
        <if test="beginDate != null and beginDate != ''">
            and eco.begin_date_real <![CDATA[ >= ]]> #{beginDate}
        </if>
        <if test="endDate != null and endDate != ''">
            and eco.begin_date_real <![CDATA[ <= ]]> #{endDate}
        </if>
        <if test="searchCoach != null and searchCoach != ''">
            AND edu.coach_name LIKE '%'+#{searchCoach}+'%'
        </if>
        <if test="searchCourse != null and searchCourse != ''">
            AND edu.course_name LIKE '%'+#{searchCourse}+'%'
        </if>
            and edu.CustomerCode = #{code}
            and edu.type = ${eduType}

    </select>

    <select id="findConsumeMember" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            emo.create_date createDate,
            edu.course_name courseName,
            emo.class_num classNum,
            emo.price,
            emo.begin_date_real beginDate,
            emo.end_date_real endDate,
            emo.total_time totalTime,
            emo.member_card_no memberCardNo,
            eci.member_name memberName,
            eci.sex sex,
            eci.mobile,
            emo.card_type cardType,
            emo.card_name cardName,
            emo.use_benefit useBenefit,
            emo.remain_benefit remainBenefit,
            edu.coach_name coachName,
            edu.room_name roomName,
            emo.create_name createName,
            emo.score score,
            emo.description description,
            edu.execute_date_plan executeDatePlan,
            edu.begin_date_plan beginDatePlan,
            edu.end_date_plan endDatePlan,
            emo.member_assess memberAssess,
            emo.coach_summary coachSummary,
            emo.program_better programBetter
        FROM
            fr_education_member_order emo
            LEFT JOIN fr_education_client_info eci ON eci.id = emo.client_info_id
            LEFT JOIN fr_education edu ON edu.id = eci.education_id
        WHERE
            edu.shop_id = #{shopId}
        <if test="beginDate != null and beginDate != ''">
            and emo.begin_date_real <![CDATA[ >= ]]> #{beginDate}
        </if>
        <if test="endDate != null and endDate != ''">
            and emo.begin_date_real <![CDATA[ <= ]]> #{endDate}
        </if>
        <if test="searchCoach != null and searchCoach != ''">
            AND edu.coach_name LIKE '%'+#{searchCoach}+'%'
        </if>
        <if test="searchCourse != null and searchCourse != ''">
            AND edu.course_name LIKE '%'+#{searchCourse}+'%'
        </if>
        <if test="cardType != null and cardType != ''">
            AND emo.card_type = #{cardType}
        </if>
        <if test="cardName != null and cardName != ''">
            AND emo.card_name = #{cardName}
        </if>
            and edu.CustomerCode = #{code}
            and emo.status = 2
            and edu.type = ${eduType}
    </select>

    <select id="findManageCount" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            *
        FROM
            ( SELECT COUNT ( 1 ) totalNum, SUM ( class_sales_num ) totalClassNum FROM fr_education WHERE is_use = 1 AND status = 2
            <if test="beginDate != null and beginDate != ''">
                AND execute_date_plan >= #{beginDate}
            </if>
            <if test="shopId != null and shopId != ''">
                AND shop_id = #{shopId}
            </if>
            <if test="endDate != null and endDate != ''">
                AND execute_date_plan <![CDATA[ <= ]]> #{endDate}
            </if>) a,
            ( SELECT COUNT ( 1 ) totalMemberNum FROM fr_education_member_order emo
            LEFT JOIN fr_education edu ON edu.id = emo.education_id
            WHERE emo.is_use = 1 AND emo.status = 2
            <if test="beginDate != null and beginDate != ''">
                AND emo.create_date >= #{beginDate}
            </if>
            <if test="shopId != null and shopId != ''">
                AND edu.shop_id = #{shopId}
            </if>
            <if test="endDate != null and endDate != ''">
                AND emo.create_date <![CDATA[ <= ]]> #{endDate}
            </if>) b,
            ( SELECT COUNT ( 1 ) totalCoachNum FROM ( SELECT COUNT ( 1 ) s FROM fr_education WHERE is_use = 1 AND status = 2
             <if test="beginDate != null and beginDate != ''">
                AND execute_date_plan >= #{beginDate}
            </if>
            <if test="shopId != null and shopId != ''">
                AND shop_id = #{shopId}
            </if>
            <if test="endDate != null and endDate != ''">
                AND execute_date_plan <![CDATA[ <= ]]> #{endDate}
            </if> GROUP BY coach_id ) a ) c,
            (
        SELECT MAX
            ( finish_num ) maxReserveNum
        FROM
            fr_education_class_order eco
            LEFT JOIN fr_education edu ON edu.id = eco.education_id
        WHERE
            edu.status = 2
            AND edu.is_use = 1
            <if test="beginDate != null and beginDate != ''">
                AND eco.begin_date_real >= #{beginDate}
            </if>
            <if test="shopId != null and shopId != ''">
                AND edu.shop_id = #{shopId}
            </if>
            <if test="endDate != null and endDate != ''">
                AND eco.begin_date_real <![CDATA[ <= ]]> #{endDate}
            </if>
            ) d,
            (
        SELECT MIN
            ( finish_num ) minReserveNum
        FROM
            fr_education_class_order eco
            LEFT JOIN fr_education edu ON edu.id = eco.education_id
        WHERE
            edu.status = 2
            AND edu.is_use = 1
            <if test="beginDate != null and beginDate != ''">
                AND eco.begin_date_real >= #{beginDate}
            </if>
            <if test="shopId != null and shopId != ''">
                AND edu.shop_id = #{shopId}
            </if>
            <if test="endDate != null and endDate != ''">
                AND eco.begin_date_real <![CDATA[ <= ]]> #{endDate}
            </if>
            ) e
    </select>

    <select id="getGroupRoomByShopId" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            sdaduim.ID sdaduimId,
            sdaduim.Name sdaduimName,
            gcr.name roomName,
            gcr.id roomId
        FROM
            fr_group_class_room gcr
            LEFT JOIN Sdaduim sdaduim ON gcr.sdaduim_id = sdaduim.ID
        WHERE
            gcr.shop_id = #{shopId}
            AND gcr.customer_code = #{code}
            AND gcr.is_using = 1
            AND sdaduim.Status = 0
    </select>

    <select id="findEducationToCopy" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            edu.id eduId,
            ec.id configId,
            ero.id reserveId,
            eco.id cardSettleId
        FROM
            fr_education edu
            LEFT JOIN fr_education_config ec ON edu.id = ec.education_id
            LEFT JOIN fr_education_reserve_object ero ON ec.id = ero.education_config_id
            LEFT JOIN fr_education_card_object eco ON ec.id = eco.education_config_id
        where
            edu.type = ${eduType}
            and edu.begin_date_plan <![CDATA[ >= ]]> #{beginDate}
            and edu.begin_date_plan <![CDATA[ <= ]]> #{endDate}
            and edu.coach_id = #{coachId}
            and edu.shop_id = #{shopId}
            and edu.course_id = #{courseId}
            and edu.status = 0
            and edu.is_use = 1

    </select>


    <select id="findEduListByMonthWeek" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            edu.id eduId,
            ec.id configId,
            ero.id reserveId,
            eco.id cardSettleId,
            edu.status,
            edu.coach_name coachName,
            edu.course_name courseName,
            edu.begin_date_plan beginDate,
            edu.end_date_plan endDate,
            edu.reserve_total_num reserveTotalNum,
            (SELECT COUNT ( 1 ) FROM fr_education_client_info eci WHERE eci.education_id = edu.id AND eci.reserve_status = 1 AND eci.is_use = 1 ) eduCurrentCount,
            (SELECT COUNT ( 1 ) FROM fr_education_client_info eci WHERE eci.education_id = edu.id AND eci.reserve_status = 2 AND eci.is_use = 1 ) eduToConfirmCount

        FROM
            fr_education edu
            LEFT JOIN fr_education_config ec ON edu.id = ec.education_id
            LEFT JOIN fr_education_reserve_object ero ON ec.id = ero.education_config_id
            LEFT JOIN fr_education_card_object eco ON ec.id = eco.education_config_id
        WHERE
            edu.is_use = 1
            and edu.type = ${eduType}
            and edu.begin_date_plan <![CDATA[ >= ]]> #{beginDate}
            and edu.begin_date_plan <![CDATA[ <= ]]> #{endDate}
            and edu.shop_id = #{shopId}
        <if test="coachId != null and coachId != ''">
            and edu.coach_id = #{coachId}
        </if>
            and edu.CustomerCode = #{code}
        <if test="roomId != null and roomId != ''">
            and edu.room_id = #{roomId}
        </if>
        order by
            edu.begin_date_plan asc

    </select>

    <select id="findEducationToCopyByEduId" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            edu.id eduId,
            ec.id configId,
            ero.id reserveId,
            eco.id cardSettleId
        FROM
            fr_education edu
            LEFT JOIN fr_education_config ec ON edu.id = ec.education_id
            LEFT JOIN fr_education_reserve_object ero ON ec.id = ero.education_config_id
            LEFT JOIN fr_education_card_object eco ON ec.id = eco.education_config_id
        where
            edu.id = #{eduId}

    </select>

    <select id="findAllCourseForShopSdaduim" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            *
        FROM
            (
            SELECT
                pc.id courseId,
                pc.name courseName,
                pp.sdaduim_id sdaduimId,
                pp.shop_id shopId,
                shop.shopName,
                sda.name sdaduimName,
                ( SELECT 1 ) eduType
            FROM
                fr_private_cource pc
                LEFT JOIN fr_private_package_relation pp ON pp.cource_id = pc.id
                LEFT JOIN Shop shop ON shop.id = pp.shop_id
                LEFT JOIN Sdaduim sda ON sda.id = pp.sdaduim_id
            WHERE
                1 = 1
            <if test="shopId != null and shopId != ''">
                and pp.shop_id = #{shopId}
            </if>
                and pc.customer_code = #{code}
            ) a UNION
        SELECT
            gc.id courseId,
            gc.name courseName,
            gs.sdaduim_id sdaduimId,
            gssr.shop_id shopId,
            shop.shopName,
            sda.name sdaduimName,
            ( SELECT 0 ) eduType
        FROM
            fr_group_course gc
            LEFT JOIN fr_group_series gs ON gs.id = gc.series_id
            LEFT JOIN fr_group_series_shop_relation gssr ON gs.id = gssr.series_id
            LEFT JOIN Shop shop ON shop.id = gssr.shop_id
            LEFT JOIN Sdaduim sda ON sda.id = gs.sdaduim_id
        WHERE
            1 = 1
        <if test="shopId != null and shopId != ''">
            and gssr.shop_id = #{shopId}
        </if>
            and gc.customer_code = #{code}
    </select>

    <select id="findSettingCourse" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            si.value
        FROM
            fr_setting_info si
        WHERE
            key1 = #{key}
            AND customer_code = #{code}
            AND type = ${eduType}
    </select>
</mapper>
